# Conference {#conference .unnumbered}

## Guidelines and tips

A reminder that all our events are covered by our [Code of Conduct](#code-of-conduct).

Successful speakers are expected to follow the following guidelines:

- if you make changes to your talk, details should be emailed to [nhs.rcommunity@nhs.net](nhs.rcommunity@nhs.net) as soon as possible. 
If your talk changes substantially it may not be possible to accommodate your new talk as this hasn't been agreed through the sifting process.
- you may use your own or organisation's slides.
We just ask that these are published publicly and a link shared.
- we accept various formats of presentations and offer our [own Quarto slides](https://github.com/nhs-r-community/NHSR-presentations) as templates - these are free to copy, change and reuse.
- feel free to give an introduction at the start of your talk but, particularly for participants from industry, please be brief and don't use this as an opportunity for sales.
This is because the audience often do not hold budgets and are attending the conference for the content of the talk.
More information can be found in the section on [sponsorship](#sponsor) with regard to the financing of the conference and community.
- the default is to share all recordings so please let us know if you don't want your recording to be shared on YouTube.
- if you cannot attend, for whatever reason and at any time, please do let us know as we will have some talks prepared for this eventuality or we may be able to extend breaks.
These are much easier to accommodate when we have notice to prepare, and where we have to change the agenda, this can help online attendees with managing their attendance.

We also offer the following advice:

- practice your talk! 
And do this a few times. 
If you would like someone from the NHS-R Community to talk through your slides (even in their draft form) do get in touch with us at [nhs.rcommunity@nhs.net](nhs.rcommunity@nhs.net).
We've had a few people in the past take us up on this offer and they've given fantastic talks.
- if you'd like to speak to someone about their experience at the conference and giving a presentation, again, please do get in touch.
- don't leave your slides to the last minute!
This is a tough one as work often takes priority but technical issues can occur and it's better to find these out with plenty of time to resolve.

:::{.callout-important collapse=false appearance='default' icon=true}
## Alternative text (important)
We ask in a pre-survey question if the presenter agrees to include alternative text in their presentations, and this is a mandatory agreement.
As an open source conference we hope that people will share their presentations after the event and we can either host these in an NHS-R Community GitHub repository or link to them. 
Consequently, in line with our own requirements to be accessible we ask that every image and chart has [alternative text](#alt-text) and will offer support to those new to doing this.
:::


## A note for all attendees

Time keeping at conferences can vary slightly throughout the day and we attempt to start the sessions on time wherever possible.
However, where talks are shorter than anticipated, times will inevitably change and whilst this can be shared to the people in person we will not be able to update the online agenda.

## Abstract examples

Abstracts have been kindly shared by successful submitters to give those new to submitting abstracts an idea of what is wanted by the audience and organisers of the NHS-R Community and NHS.Pycom conferences.

These are not necessarily talks that will be acceptable for every year and we will be sharing our themes and scoring with abstract calls for conferences.
We will, most likely, be on the NHS-R Slack and can share updates there or answer questions.

### Abstract for a lightning talk (10 minutes)

**Strategies to reduce cognitive load when coding** The volume of code produced as a project progresses can get overwhelming for the contributors. The talk will give a high level overview of the strategies that can be employed to make code more manageable. Inspired by the Targets package, the talk will discuss the benefits of a function based approach to writing code to improve readability and visibility of the workflow. The benefits of re-using functions, writing tests to ensure the functions are working as intended, and storing functions within a code library or package. The benefits of code reviews and strategies to implement these and how to use version control to support this process. The importance of user friendly documentation incorporating readme files, data dictionaries, flow diagrams and SOPs. The presentation will highlight strategies to reduce the cognitive load on code writers, reduce time debugging and make work easier to understand and handover to colleagues. The presentation will signpost to useful packages and resources to explore the topic further.

**Did you hear? Base R is dead! Or is it?** I’ve spent most of my time in the public sector using the tidyverse, but I started learning R before the tidyverse existed (to be polite, you could call me ‘seasoned’). Recently I’ve started to write more base R code again. Why? I'll talk about how base R can do loads of neat stuff out of the box without you needing to install and update any packages (dependencies aren’t bad things per se, but can cause trouble if not managed appropriately). I'll also tell you about some recent additions, like the base pipe and lambda function notation, which demonstrate how base R is responding to the needs of the modern coder. Oh, and you can also do wacky stuff like make an interactive pixel-art creator, a persistent Tamagotchi pet, or a procedural dungeon-crawler. Note that this talk does not constitute a 'base versus tidyverse' flame war. It’s purely to appreciate the elegance of good old base R and to highlight some things it can do that you might not have realised (or like me, you forgot a long time ago).

Full details are shared: <https://github.com/matt-dray/nhs-r-2023>

### Abstract for a plenary plenary talk (20 minutes)

**You should blog with Quarto** One of the most sensible things I’ve done in my life is start an R blog. Not for clout or sponsorship deals (yet!), but so I can (1) write down what I’ve learnt about R and refer to it later, (2) help people who are looking for answers and (3) improve my communication skills. Why don’t you join the blogger lifestyle too? Or maybe you already blog, but you want to do it more often and on a platform that you’ll actually enjoy using. I’ll walk you through the process of setting up a blog using Quarto, the most hip publishing framework around. That’s right, you can use R to set up your blog and write posts about R. I’ll talk about how to deploy it for free and automatically with Netlify and also how you can hook it up with that domain name you bought years ago but never got around to using. As a bonus, I’ll give you some prompts for what to write about and some insider info on what’s been the most successful and most rewarding content for me in over 150 posts to date.


